!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$	./jquery-1.3.2.js	\^        _jQuery = window.jQuery,$	kind:FOO_1::FOO_2	scope:	language:js
A	./test.js	/^Ext.A = function(){ this.a = []; }; Ext.extend(Ext.A, Ext.B, {b:1});$/;	kind:CLOSURE_1263649753	scope:.Ext	language:js
BoxComponent	./widgets/BoxComponent.js	\^Ext.BoxComponent = Ext.extend(Ext.Component, {$	kind:Ext.Component	scope:.Ext	language:js
BoxComponentProperty1	./widgets/Container.js	\^ * @xtype container$	kind:Boolean	scope:.Ext.BoxComponent	language:js
CLOSURE_1263649753	./test.js	/^Ext.A = function(){ this.a = []; }; Ext.extend(Ext.A, Ext.B, {b:1});$/;	kind:Ext.B	scope:	language:js
Component	./widgets/Editor.js	\^        this.field = field;$	kind:Ext.Editor	scope:.Ext	language:js
ComponentProperty1	./widgets/Container.js	\^ * @xtype container$	kind:Boolean	scope:.Ext.Component	language:js
Container	./widgets/Container.js	\^ * @xtype container$	kind:Ext.BoxComponent	scope:.Ext	language:js
ContainerProperty1	./widgets/Container.js	\^ * @xtype container$	kind:Boolean	scope:.Ext.Container	language:js
Editor	./widgets/Container.js	\^ * @xtype container$	kind:Object	scope:.Ext	language:js
EditorProperty1	./widgets/Container.js	\^ * @xtype container$	kind:Boolean	scope:.Ext.Editor	language:js
EditorProperty2	./widgets/Container.js	\^ * @xtype container$	kind:Boolean	scope:.Ext.Editor	language:js
Ext	./core/core/Ext.js	\^Ext = {$	kind:Object	scope:	language:js
FOO_1	./jquery-1.3.2.js	\^(function(){$	kind:Function	scope:	language:js
FOO_2	./jquery-1.3.2.js	\^        _jQuery = window.jQuery,$	kind:FOO_1::Function	scope:::FOO_1	language:js
FOO_3	./jquery-1.3.2.js	\^        _jQuery = window.jQuery,$	kind:Function	scope:.FOO_1	language:js
a	./test.js	/^Ext.A = function(){ this.a = []; }; Ext.extend(Ext.A, Ext.B, {b:1});$/;	kind:Array	scope:.Ext.B	language:js
accepts	./jquery-1.3.2.js	\^                return name ?$	kind:Object	scope:::FOO_1.FOO_2.ajaxSettings	language:js
ajaxSettings	./jquery-1.3.2.js	\^                // trying to access or manipulate it$	kind:Object	scope:::FOO_1.FOO_2	language:js
arr	./test.js	/^var arr = [];$/;	kind:Array	scope:	language:js
async	./jquery-1.3.2.js	\^                        jQuery.cache[ id ][ name ] = data;$	kind:Boolean	scope:::FOO_1.FOO_2.ajaxSettings	language:js
b	./test.js	/^Ext.A = function(){ this.a = []; }; Ext.extend(Ext.A, Ext.B, {b:1});$/;	kind:Number	scope:.Ext.A	language:js
html	./jquery-1.3.2.js	\^                        id;$	kind:String	scope:::FOO_1.FOO_2.ajaxSettings.accepts	language:js
jQuery	./jquery-1.3.2.js	\^        _jQuery = window.jQuery,$	kind:FOO_1::FOO_2	scope:	language:js
json	./jquery-1.3.2.js	\^$	kind:String	scope:::FOO_1.FOO_2.ajaxSettings.accepts	language:js
